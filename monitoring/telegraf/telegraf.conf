[global_tags]
[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  hostname = ""
  omit_hostname = false

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  urls = [ "http://influxdb:8086" ]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "telegraf"

  ## Timeout for HTTP messages.
  timeout = "15s"

  ## HTTP Basic Auth
  username = "telegraf"
  password = "admin"

# Query given DNS server and gives statistics
[[inputs.dns_query]]
  ## servers to query
  servers = [
    "1.1.1.1",         #cloudflare
    "8.8.8.8",         #google
    "9.9.9.9",         #quad9
    "209.244.0.3",     #level3
    "80.80.80.80",     #freenom
    "208.67.222.123",  #opendns
    "199.85.126.30",   #norton
    "185.228.168.168", #cleanbrowsing
    "94.140.14.15",    #adguard
    "8.26.56.26",      #comodo
    "95.85.95.85"      #gcore
  ]

  ## Domains or subdomains to query.
  domains = [ 
    "google.com",
    "amazon.com",
    "youtube.com",
    "reddit.com",
    "netflix.com",
    "gmail.com",
    "facebook.com",
    "whatsapp.com"
  ]

# Monitors internet speed using speedtest.net service
[[inputs.internet_speed]]
  ## This plugin downloads many MB of data each time it is run. As such
  ## consider setting a higher interval for this plugin to reduce the
  ## demand on your internet connection.
  interval = "60m"

  ## Enable to reduce memory usage
  # memory_saving_mode = false

  ## Caches the closest server location
  cache = false

  ## Number of concurrent connections
  # connections = 0

  ## Test mode [ single(default), multi ]
  ## By default, a single sever is used for testing. This may work for most,
  ## however, setting to "multi" will reach out to multiple servers in an
  ## attempt to get closer to ideal internet speeds.
  ## And "multi" will use all available servers to calculate average packet loss.
  test_mode = "multi"

# Ping given url(s) and return statistics
[[inputs.ping]]
  ## Hosts to send ping packets to.
  urls = [
    "1.1.1.1",
    "8.8.8.8",
    "9.9.9.9",
    "youtube.com",
    "google.com",
    "amazon.com",
    "whatsapp.com",
    "a.root-servers.net"
  ]

  ## Number of ping packets to send per interval.  Corresponds to the "-c"
  ## option of the ping command.
  count = 5

  ## Time to wait between sending ping packets in seconds.  Operates like the
  ## "-i" option of the ping command.
  ping_interval = 1.0

  ## If set, the time to wait for a ping response in seconds.  Operates like
  ## the "-W" option of the ping command.
  timeout = 2.0
